SemverQuery(
    id: "function_generic_type_reordered",
    human_readable_name: "function generic types were reordered",
    description: "A function's signature now requires a const generic in the prior spot of a generic type.",
    required_update: Major,
    lint_level: Deny,
    reference_link: Some("https://doc.rust-lang.org/reference/items/generics.html"),
    query: r#"
    {
        CrateDiff {
            baseline {
                item {
                    ... on Function {
                        visibility_limit @filter(op: "=", value: ["$public"])
                        name @output

                        importable_path {
                            path @tag @output
                            public_api @filter(op: "=", value: ["$true"])
                        }

                        # The function takes the same number of const generic
                        # and generic type parameters as before.
                        # Otherwise other lints will trigger instead:
                        # - `function_requires_different_const_generic_params`
                        # - `function_requires_different_generic_type_params`
                        generic_parameter @fold
                                          @transform(op: "count")
                                          @tag(name: "required_const_count")
                                          @output(name: "required_const_count") {
                            ... on GenericConstParameter {
                                name
                            }
                        }
                        generic_parameter @fold
                                          @transform(op: "count")
                                          @tag(name: "required_type_count")
                                          @output(name: "required_type_count") {
                            ... on GenericTypeParameter {
                                name
                            }
                        }

                        # But a generic type parameter at a specific position in the signature
                        # has become a const generic instead. This is a breaking change.
                        generic_parameter {
                            ... on GenericTypeParameter {
                                type_name: name @output
                                position @tag @output
                            }
                        }
                    }
                }
            }
            current {
                item {
                    ... on Function {
                        visibility_limit @filter(op: "=", value: ["$public"])

                        importable_path {
                            path @filter(op: "=", value: ["%path"])
                            public_api @filter(op: "=", value: ["$true"])
                        }

                        generic_parameter @fold
                                          @transform(op: "count")
                                          @filter(op: "=", value: ["%required_const_count"]) {
                            ... on GenericConstParameter {
                                name
                            }
                        }
                        generic_parameter @fold
                                          @transform(op: "count")
                                          @filter(op: "=", value: ["%required_type_count"]) {
                            ... on GenericTypeParameter {
                                name
                            }
                        }

                        generic_parameter {
                            ... on GenericConstParameter {
                                const_name: name @output
                                position @filter(op: "=", value: ["%position"])
                            }
                        }

                        span_: span @optional {
                            filename @output
                            begin_line @output
                            end_line @output
                        }
                    }
                }
            }
        }
    }"#,
    arguments: {
        "public": "public",
        "true": true,
    },
    error_message: "A function's signature now requires a const generic parameter where a generic type previously stood. Uses of this function that supplied that generic type will be broken since a const generic is now required instead.",
    per_result_error_template: Some("{{name}} used to expect type {{type_name}} in the place of const {{const_name}} in {{span_filename}}:{{span_begin_line}}"),
    // TODO: see https://github.com/obi1kenobi/cargo-semver-checks/blob/main/CONTRIBUTING.md#adding-a-witness
    // for information about this field.
    //
    // The witness would be a function invocation with the old number
    // of const generics, which is insufficient for the new definition.
    witness: None,
)

---
source: src/query.rs
expression: "&query_execution_results"
---
{
  "./test_crates/async_impl_future_equivalence/": [
    {
      "current_signature": String("fn switches_to_return_impl() -> impl Future"),
      "name": String("switches_to_return_impl"),
      "old_signature": String("async fn switches_to_return_impl()"),
      "path": List([
        String("async_impl_future_equivalence"),
        String("switches_to_return_impl"),
      ]),
      "span_begin_line": Uint64(8),
      "span_end_line": Uint64(10),
      "span_filename": String("src/lib.rs"),
      "visibility_limit": String("public"),
    },
    {
      "current_signature": String("async fn switches_to_async()"),
      "name": String("switches_to_async"),
      "old_signature": String("fn switches_to_async() -> impl Future"),
      "path": List([
        String("async_impl_future_equivalence"),
        String("switches_to_async"),
      ]),
      "span_begin_line": Uint64(12),
      "span_end_line": Uint64(12),
      "span_filename": String("src/lib.rs"),
      "visibility_limit": String("public"),
    },
  ],
  "./test_crates/exported_function_changed_abi/": [
    {
      "current_signature": String("extern \"C\" fn public_null_export_name_func_will_become_c()"),
      "name": String("public_null_export_name_func_will_become_c"),
      "old_signature": String("fn public_null_export_name_func_will_become_c()"),
      "path": List([
        String("exported_function_changed_abi"),
        String("public_null_export_name_func_will_become_c"),
      ]),
      "span_begin_line": Uint64(4),
      "span_end_line": Uint64(4),
      "span_filename": String("src/lib.rs"),
      "visibility_limit": String("public"),
    },
  ],
  "./test_crates/function_abi_no_longer_unwind/": [
    {
      "current_signature": String("extern \"C\" fn unwind_function_becomes_non_unwind()"),
      "name": String("unwind_function_becomes_non_unwind"),
      "old_signature": String("extern \"C-unwind\" fn unwind_function_becomes_non_unwind()"),
      "path": List([
        String("function_abi_no_longer_unwind"),
        String("unwind_function_becomes_non_unwind"),
      ]),
      "span_begin_line": Uint64(3),
      "span_end_line": Uint64(3),
      "span_filename": String("src/lib.rs"),
      "visibility_limit": String("public"),
    },
    {
      "current_signature": String("extern \"C-unwind\" fn non_unwind_function_becomes_unwind()"),
      "name": String("non_unwind_function_becomes_unwind"),
      "old_signature": String("extern \"C\" fn non_unwind_function_becomes_unwind()"),
      "path": List([
        String("function_abi_no_longer_unwind"),
        String("non_unwind_function_becomes_unwind"),
      ]),
      "span_begin_line": Uint64(5),
      "span_end_line": Uint64(5),
      "span_filename": String("src/lib.rs"),
      "visibility_limit": String("public"),
    },
  ],
  "./test_crates/function_changed_abi/": [
    {
      "current_signature": String("fn c_function_becomes_rust()"),
      "name": String("c_function_becomes_rust"),
      "old_signature": String("extern \"C\" fn c_function_becomes_rust()"),
      "path": List([
        String("function_changed_abi"),
        String("c_function_becomes_rust"),
      ]),
      "span_begin_line": Uint64(3),
      "span_end_line": Uint64(3),
      "span_filename": String("src/lib.rs"),
      "visibility_limit": String("public"),
    },
    {
      "current_signature": String("fn c_function_becomes_rust_implicitly()"),
      "name": String("c_function_becomes_rust_implicitly"),
      "old_signature": String("extern \"C\" fn c_function_becomes_rust_implicitly()"),
      "path": List([
        String("function_changed_abi"),
        String("c_function_becomes_rust_implicitly"),
      ]),
      "span_begin_line": Uint64(5),
      "span_end_line": Uint64(5),
      "span_filename": String("src/lib.rs"),
      "visibility_limit": String("public"),
    },
    {
      "current_signature": String("extern \"C\" fn rust_function_becomes_c()"),
      "name": String("rust_function_becomes_c"),
      "old_signature": String("fn rust_function_becomes_c()"),
      "path": List([
        String("function_changed_abi"),
        String("rust_function_becomes_c"),
      ]),
      "span_begin_line": Uint64(7),
      "span_end_line": Uint64(7),
      "span_filename": String("src/lib.rs"),
      "visibility_limit": String("public"),
    },
    {
      "current_signature": String("extern \"C\" fn implicit_rust_function_becomes_c()"),
      "name": String("implicit_rust_function_becomes_c"),
      "old_signature": String("fn implicit_rust_function_becomes_c()"),
      "path": List([
        String("function_changed_abi"),
        String("implicit_rust_function_becomes_c"),
      ]),
      "span_begin_line": Uint64(9),
      "span_end_line": Uint64(9),
      "span_filename": String("src/lib.rs"),
      "visibility_limit": String("public"),
    },
    {
      "current_signature": String("fn implicit_c_function_becomes_rust()"),
      "name": String("implicit_c_function_becomes_rust"),
      "old_signature": String("extern \"C\" fn implicit_c_function_becomes_rust()"),
      "path": List([
        String("function_changed_abi"),
        String("implicit_c_function_becomes_rust"),
      ]),
      "span_begin_line": Uint64(11),
      "span_end_line": Uint64(11),
      "span_filename": String("src/lib.rs"),
      "visibility_limit": String("public"),
    },
    {
      "current_signature": String("extern \"C\" fn system_function_becomes_c()"),
      "name": String("system_function_becomes_c"),
      "old_signature": String("extern \"system\" fn system_function_becomes_c()"),
      "path": List([
        String("function_changed_abi"),
        String("system_function_becomes_c"),
      ]),
      "span_begin_line": Uint64(17),
      "span_end_line": Uint64(17),
      "span_filename": String("src/lib.rs"),
      "visibility_limit": String("public"),
    },
  ],
  "./test_crates/function_const_removed/": [
    {
      "current_signature": String("fn add(x: i64, y: i64) -> i64"),
      "name": String("add"),
      "old_signature": String("const fn add(x: i64, y: i64) -> i64"),
      "path": List([
        String("function_const_removed"),
        String("add"),
      ]),
      "span_begin_line": Uint64(3),
      "span_end_line": Uint64(5),
      "span_filename": String("src/lib.rs"),
      "visibility_limit": String("public"),
    },
  ],
  "./test_crates/function_generics_reordered/": [
    {
      "current_signature": String("fn one_each_type_first<const N: usize, T>(_value: [T; N])"),
      "name": String("one_each_type_first"),
      "old_signature": String("fn one_each_type_first<T, const N: usize>(_value: [T; N])"),
      "path": List([
        String("function_generics_reordered"),
        String("one_each_type_first"),
      ]),
      "span_begin_line": Uint64(3),
      "span_end_line": Uint64(3),
      "span_filename": String("src/lib.rs"),
      "visibility_limit": String("public"),
    },
    {
      "current_signature": String("fn one_each_const_first<T, const N: usize>(_value: [T; N])"),
      "name": String("one_each_const_first"),
      "old_signature": String("fn one_each_const_first<const N: usize, T>(_value: [T; N])"),
      "path": List([
        String("function_generics_reordered"),
        String("one_each_const_first"),
      ]),
      "span_begin_line": Uint64(5),
      "span_end_line": Uint64(5),
      "span_filename": String("src/lib.rs"),
      "visibility_limit": String("public"),
    },
    {
      "current_signature": String("fn lifetime_ignored<\'a, T, const N: usize>(_value: &\'a [T; N])"),
      "name": String("lifetime_ignored"),
      "old_signature": String("fn lifetime_ignored<\'a, const N: usize, T>(_value: &\'a [T; N])"),
      "path": List([
        String("function_generics_reordered"),
        String("lifetime_ignored"),
      ]),
      "span_begin_line": Uint64(7),
      "span_end_line": Uint64(7),
      "span_filename": String("src/lib.rs"),
      "visibility_limit": String("public"),
    },
    {
      "current_signature": String("fn two_each_but_one_changed<T, U, const N: usize, const M: usize>(_x: [T; N], _y: [U; M])"),
      "name": String("two_each_but_one_changed"),
      "old_signature": String("fn two_each_but_one_changed<T, const N: usize, const M: usize, U>(_x: [T; N], _y: [U; M])"),
      "path": List([
        String("function_generics_reordered"),
        String("two_each_but_one_changed"),
      ]),
      "span_begin_line": Uint64(9),
      "span_end_line": Uint64(9),
      "span_filename": String("src/lib.rs"),
      "visibility_limit": String("public"),
    },
    {
      "current_signature": String("fn two_each_two_changed<const N: usize, T, U, const M: usize>(_x: [T; N], _y: [U; M])"),
      "name": String("two_each_two_changed"),
      "old_signature": String("fn two_each_two_changed<T, const N: usize, const M: usize, U>(_x: [T; N], _y: [U; M])"),
      "path": List([
        String("function_generics_reordered"),
        String("two_each_two_changed"),
      ]),
      "span_begin_line": Uint64(11),
      "span_end_line": Uint64(11),
      "span_filename": String("src/lib.rs"),
      "visibility_limit": String("public"),
    },
    {
      "current_signature": String("fn like_for_like_changed_not_breaking<U, const M: usize, const N: usize, T>(_x: [U; M], _y: [T; N])"),
      "name": String("like_for_like_changed_not_breaking"),
      "old_signature": String("fn like_for_like_changed_not_breaking<T, const N: usize, const M: usize, U>(_x: [T; N], _y: [U; M])"),
      "path": List([
        String("function_generics_reordered"),
        String("like_for_like_changed_not_breaking"),
      ]),
      "span_begin_line": Uint64(13),
      "span_end_line": Uint64(13),
      "span_filename": String("src/lib.rs"),
      "visibility_limit": String("public"),
    },
  ],
  "./test_crates/function_no_longer_unsafe/": [
    {
      "current_signature": String("fn add(x: i64, y: i64) -> i64"),
      "name": String("add"),
      "old_signature": String("unsafe fn add(x: i64, y: i64) -> i64"),
      "path": List([
        String("function_no_longer_unsafe"),
        String("add"),
      ]),
      "span_begin_line": Uint64(3),
      "span_end_line": Uint64(5),
      "span_filename": String("src/lib.rs"),
      "visibility_limit": String("public"),
    },
  ],
  "./test_crates/function_now_const/": [
    {
      "current_signature": String("const fn add(x: i64, y: i64) -> i64"),
      "name": String("add"),
      "old_signature": String("fn add(x: i64, y: i64) -> i64"),
      "path": List([
        String("function_now_const"),
        String("add"),
      ]),
      "span_begin_line": Uint64(3),
      "span_end_line": Uint64(5),
      "span_filename": String("src/lib.rs"),
      "visibility_limit": String("public"),
    },
  ],
  "./test_crates/function_now_returns_unit/": [
    {
      "current_signature": String("fn PublicFnToUnit()"),
      "name": String("PublicFnToUnit"),
      "old_signature": String("fn PublicFnToUnit() -> u32"),
      "path": List([
        String("function_now_returns_unit"),
        String("PublicFnToUnit"),
      ]),
      "span_begin_line": Uint64(5),
      "span_end_line": Uint64(5),
      "span_filename": String("src/lib.rs"),
      "visibility_limit": String("public"),
    },
    {
      "current_signature": String("async fn PublicAsyncFnToUnit()"),
      "name": String("PublicAsyncFnToUnit"),
      "old_signature": String("async fn PublicAsyncFnToUnit() -> u32"),
      "path": List([
        String("function_now_returns_unit"),
        String("PublicAsyncFnToUnit"),
      ]),
      "span_begin_line": Uint64(14),
      "span_end_line": Uint64(14),
      "span_filename": String("src/lib.rs"),
      "visibility_limit": String("public"),
    },
    {
      "current_signature": String("fn PublicAsyncFnNowSync()"),
      "name": String("PublicAsyncFnNowSync"),
      "old_signature": String("async fn PublicAsyncFnNowSync() -> u32"),
      "path": List([
        String("function_now_returns_unit"),
        String("PublicAsyncFnNowSync"),
      ]),
      "span_begin_line": Uint64(16),
      "span_end_line": Uint64(16),
      "span_filename": String("src/lib.rs"),
      "visibility_limit": String("public"),
    },
    {
      "current_signature": String("async fn PublicFnNowAsync()"),
      "name": String("PublicFnNowAsync"),
      "old_signature": String("fn PublicFnNowAsync() -> u32"),
      "path": List([
        String("function_now_returns_unit"),
        String("PublicFnNowAsync"),
      ]),
      "span_begin_line": Uint64(18),
      "span_end_line": Uint64(18),
      "span_filename": String("src/lib.rs"),
      "visibility_limit": String("public"),
    },
    {
      "current_signature": String("async fn PublicImplFutureNowAsync()"),
      "name": String("PublicImplFutureNowAsync"),
      "old_signature": String("fn PublicImplFutureNowAsync() -> impl core::future::Future<Output = ()>"),
      "path": List([
        String("function_now_returns_unit"),
        String("PublicImplFutureNowAsync"),
      ]),
      "span_begin_line": Uint64(22),
      "span_end_line": Uint64(22),
      "span_filename": String("src/lib.rs"),
      "visibility_limit": String("public"),
    },
    {
      "current_signature": String("fn PublicAsyncFnNowImplFuture() -> impl core::future::Future<Output = ()>"),
      "name": String("PublicAsyncFnNowImplFuture"),
      "old_signature": String("async fn PublicAsyncFnNowImplFuture()"),
      "path": List([
        String("function_now_returns_unit"),
        String("PublicAsyncFnNowImplFuture"),
      ]),
      "span_begin_line": Uint64(24),
      "span_end_line": Uint64(26),
      "span_filename": String("src/lib.rs"),
      "visibility_limit": String("public"),
    },
    {
      "current_signature": String("fn PublicImplFutureToUnit()"),
      "name": String("PublicImplFutureToUnit"),
      "old_signature": String("fn PublicImplFutureToUnit() -> impl core::future::Future<Output = ()>"),
      "path": List([
        String("function_now_returns_unit"),
        String("PublicImplFutureToUnit"),
      ]),
      "span_begin_line": Uint64(28),
      "span_end_line": Uint64(28),
      "span_filename": String("src/lib.rs"),
      "visibility_limit": String("public"),
    },
  ],
  "./test_crates/function_parameter_type_changed/": [
    {
      "current_signature": String("fn function_with_parameter_changed(_: i64)"),
      "name": String("function_with_parameter_changed"),
      "old_signature": String("fn function_with_parameter_changed(_: i32)"),
      "path": List([
        String("function_parameter_type_changed"),
        String("function_with_parameter_changed"),
      ]),
      "span_begin_line": Uint64(4),
      "span_end_line": Uint64(4),
      "span_filename": String("src/lib.rs"),
      "visibility_limit": String("public"),
    },
    {
      "current_signature": String("fn function_with_signature_changed(_param_changed: ())"),
      "name": String("function_with_signature_changed"),
      "old_signature": String("fn function_with_signature_changed(_param: ())"),
      "path": List([
        String("function_parameter_type_changed"),
        String("function_with_signature_changed"),
      ]),
      "span_begin_line": Uint64(7),
      "span_end_line": Uint64(7),
      "span_filename": String("src/lib.rs"),
      "visibility_limit": String("public"),
    },
  ],
  "./test_crates/function_requires_different_const_generic_params/": [
    {
      "current_signature": String("fn previously_not_generic<const N: usize>() -> [i64; N]"),
      "name": String("previously_not_generic"),
      "old_signature": String("fn previously_not_generic()"),
      "path": List([
        String("function_requires_different_const_generic_params"),
        String("previously_not_generic"),
      ]),
      "span_begin_line": Uint64(3),
      "span_end_line": Uint64(5),
      "span_filename": String("src/lib.rs"),
      "visibility_limit": String("public"),
    },
    {
      "current_signature": String("fn add_const_generic<const N: usize, const M: usize>(data: [i64; N]) -> [i64; M]"),
      "name": String("add_const_generic"),
      "old_signature": String("fn add_const_generic<const N: usize>(data: [i64; N])"),
      "path": List([
        String("function_requires_different_const_generic_params"),
        String("add_const_generic"),
      ]),
      "span_begin_line": Uint64(7),
      "span_end_line": Uint64(9),
      "span_filename": String("src/lib.rs"),
      "visibility_limit": String("public"),
    },
    {
      "current_signature": String("fn remove_const_generic(data: [i64; 8])"),
      "name": String("remove_const_generic"),
      "old_signature": String("fn remove_const_generic<const M: usize>(data: [i64; M])"),
      "path": List([
        String("function_requires_different_const_generic_params"),
        String("remove_const_generic"),
      ]),
      "span_begin_line": Uint64(11),
      "span_end_line": Uint64(11),
      "span_filename": String("src/lib.rs"),
      "visibility_limit": String("public"),
    },
  ],
  "./test_crates/function_requires_different_generic_type_params/": [
    {
      "current_signature": String("fn previously_not_generic<T>() -> T"),
      "name": String("previously_not_generic"),
      "old_signature": String("fn previously_not_generic()"),
      "path": List([
        String("function_requires_different_generic_type_params"),
        String("previously_not_generic"),
      ]),
      "span_begin_line": Uint64(3),
      "span_end_line": Uint64(5),
      "span_filename": String("src/lib.rs"),
      "visibility_limit": String("public"),
    },
    {
      "current_signature": String("fn add_generic_type<T, U>(data: T) -> U"),
      "name": String("add_generic_type"),
      "old_signature": String("fn add_generic_type<T>(data: T)"),
      "path": List([
        String("function_requires_different_generic_type_params"),
        String("add_generic_type"),
      ]),
      "span_begin_line": Uint64(7),
      "span_end_line": Uint64(9),
      "span_filename": String("src/lib.rs"),
      "visibility_limit": String("public"),
    },
    {
      "current_signature": String("fn remove_generic_type(data: i64)"),
      "name": String("remove_generic_type"),
      "old_signature": String("fn remove_generic_type<T>(data: T)"),
      "path": List([
        String("function_requires_different_generic_type_params"),
        String("remove_generic_type"),
      ]),
      "span_begin_line": Uint64(11),
      "span_end_line": Uint64(11),
      "span_filename": String("src/lib.rs"),
      "visibility_limit": String("public"),
    },
    {
      "current_signature": String("fn becomes_impl_trait(data: impl Into<i64>)"),
      "name": String("becomes_impl_trait"),
      "old_signature": String("fn becomes_impl_trait(data: i64)"),
      "path": List([
        String("function_requires_different_generic_type_params"),
        String("becomes_impl_trait"),
      ]),
      "span_begin_line": Uint64(15),
      "span_end_line": Uint64(15),
      "span_filename": String("src/lib.rs"),
      "visibility_limit": String("public"),
    },
  ],
  "./test_crates/function_unsafe_added/": [
    {
      "current_signature": String("unsafe fn add(x: i64, y: i64) -> i64"),
      "name": String("add"),
      "old_signature": String("fn add(x: i64, y: i64) -> i64"),
      "path": List([
        String("function_unsafe_added"),
        String("add"),
      ]),
      "span_begin_line": Uint64(3),
      "span_end_line": Uint64(5),
      "span_filename": String("src/lib.rs"),
      "visibility_limit": String("public"),
    },
  ],
  "./test_crates/move_item_and_reexport/": [
    {
      "current_signature": String("fn has_been_renamed_reexport()"),
      "name": String("has_been_renamed_reexport"),
      "old_signature": String("fn renamed_reexport()"),
      "path": List([
        String("move_item_and_reexport"),
        String("renamed_reexport"),
      ]),
      "span_begin_line": Uint64(25),
      "span_end_line": Uint64(25),
      "span_filename": String("src/lib.rs"),
      "visibility_limit": String("public"),
    },
  ],
  "./test_crates/nonbreaking_item_rename/": [
    {
      "current_signature": String("fn new_fn()"),
      "name": String("new_fn"),
      "old_signature": String("fn old_fn()"),
      "path": List([
        String("nonbreaking_item_rename"),
        String("old_fn"),
      ]),
      "span_begin_line": Uint64(12),
      "span_end_line": Uint64(12),
      "span_filename": String("src/lib.rs"),
      "visibility_limit": String("public"),
    },
  ],
  "./test_crates/parameter_count_changed/": [
    {
      "current_signature": String("fn function_with_a_parameter_added(a: (), b: ())"),
      "name": String("function_with_a_parameter_added"),
      "old_signature": String("fn function_with_a_parameter_added(a: ())"),
      "path": List([
        String("parameter_count_changed"),
        String("function_with_a_parameter_added"),
      ]),
      "span_begin_line": Uint64(3),
      "span_end_line": Uint64(3),
      "span_filename": String("src/lib.rs"),
      "visibility_limit": String("public"),
    },
    {
      "current_signature": String("fn function_with_parameters_removed()"),
      "name": String("function_with_parameters_removed"),
      "old_signature": String("fn function_with_parameters_removed(a: (), b: ())"),
      "path": List([
        String("parameter_count_changed"),
        String("function_with_parameters_removed"),
      ]),
      "span_begin_line": Uint64(5),
      "span_end_line": Uint64(5),
      "span_filename": String("src/lib.rs"),
      "visibility_limit": String("public"),
    },
  ],
  "./test_crates/safe_function_requires_more_target_features/": [
    {
      "current_signature": String("unsafe fn becomes_unsafe()"),
      "name": String("becomes_unsafe"),
      "old_signature": String("fn becomes_unsafe()"),
      "path": List([
        String("safe_function_requires_more_target_features"),
        String("becomes_unsafe"),
      ]),
      "span_begin_line": Uint64(27),
      "span_end_line": Uint64(27),
      "span_filename": String("src/lib.rs"),
      "visibility_limit": String("public"),
    },
  ],
  "./test_crates/safe_function_target_feature_added/": [
    {
      "current_signature": String("unsafe fn will_become_unsafe(x: u32) -> u32"),
      "name": String("will_become_unsafe"),
      "old_signature": String("fn will_become_unsafe(x: u32) -> u32"),
      "path": List([
        String("safe_function_target_feature_added"),
        String("will_become_unsafe"),
      ]),
      "span_begin_line": Uint64(17),
      "span_end_line": Uint64(19),
      "span_filename": String("src/lib.rs"),
      "visibility_limit": String("public"),
    },
  ],
  "./test_crates/safe_vs_unsafe_extern_fn/": [
    {
      "current_signature": String("extern \"C\" fn originally_legacy_now_unsafe_extern_and_safe()"),
      "name": String("originally_legacy_now_unsafe_extern_and_safe"),
      "old_signature": String("unsafe extern \"C\" fn originally_legacy_now_unsafe_extern_and_safe()"),
      "path": List([
        String("safe_vs_unsafe_extern_fn"),
        String("originally_legacy_now_unsafe_extern_and_safe"),
      ]),
      "span_begin_line": Uint64(8),
      "span_end_line": Uint64(8),
      "span_filename": String("src/lib.rs"),
      "visibility_limit": String("public"),
    },
    {
      "current_signature": String("unsafe extern \"C\" fn originally_safe_now_implicit_unsafe()"),
      "name": String("originally_safe_now_implicit_unsafe"),
      "old_signature": String("extern \"C\" fn originally_safe_now_implicit_unsafe()"),
      "path": List([
        String("safe_vs_unsafe_extern_fn"),
        String("originally_safe_now_implicit_unsafe"),
      ]),
      "span_begin_line": Uint64(16),
      "span_end_line": Uint64(16),
      "span_filename": String("src/lib.rs"),
      "visibility_limit": String("public"),
    },
    {
      "current_signature": String("unsafe extern \"C\" fn originally_safe_now_explicit_unsafe()"),
      "name": String("originally_safe_now_explicit_unsafe"),
      "old_signature": String("extern \"C\" fn originally_safe_now_explicit_unsafe()"),
      "path": List([
        String("safe_vs_unsafe_extern_fn"),
        String("originally_safe_now_explicit_unsafe"),
      ]),
      "span_begin_line": Uint64(18),
      "span_end_line": Uint64(18),
      "span_filename": String("src/lib.rs"),
      "visibility_limit": String("public"),
    },
    {
      "current_signature": String("unsafe extern \"C\" fn originally_safe_now_legacy()"),
      "name": String("originally_safe_now_legacy"),
      "old_signature": String("extern \"C\" fn originally_safe_now_legacy()"),
      "path": List([
        String("safe_vs_unsafe_extern_fn"),
        String("originally_safe_now_legacy"),
      ]),
      "span_begin_line": Uint64(28),
      "span_end_line": Uint64(28),
      "span_filename": String("src/lib.rs"),
      "visibility_limit": String("public"),
    },
  ],
  "./test_crates/unsafe_function_requires_more_target_features/": [
    {
      "current_signature": String("fn becomes_safe()"),
      "name": String("becomes_safe"),
      "old_signature": String("unsafe fn becomes_safe()"),
      "path": List([
        String("unsafe_function_requires_more_target_features"),
        String("becomes_safe"),
      ]),
      "span_begin_line": Uint64(50),
      "span_end_line": Uint64(50),
      "span_filename": String("src/lib.rs"),
      "visibility_limit": String("public"),
    },
  ],
  "./test_crates/unsafe_function_target_feature_added/": [
    {
      "current_signature": String("fn becomes_safe()"),
      "name": String("becomes_safe"),
      "old_signature": String("unsafe fn becomes_safe()"),
      "path": List([
        String("unsafe_function_target_feature_added"),
        String("becomes_safe"),
      ]),
      "span_begin_line": Uint64(22),
      "span_end_line": Uint64(22),
      "span_filename": String("src/lib.rs"),
      "visibility_limit": String("public"),
    },
  ],
}

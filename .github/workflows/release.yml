name: Release

on:
  workflow_call:
    inputs:
      publish-tag:
        required: true
        type: string
    secrets:
      CARGO_REGISTRY_TOKEN:
        required: true
      TAGGER_GITHUB_TOKEN:
        required: true

concurrency:
  group: release

env:
  RUST_BACKTRACE: 1
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 0

jobs:
  publish:
    name: Publish to crates.io
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    permissions:
      id-token: write     # Required for OIDC token exchange (Trusted Publishing)
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          persist-credentials: false

      - name: Install rust
        uses: dtolnay/rust-toolchain@stable

      - uses: Swatinem/rust-cache@v2

      # For Trusted Publishing:
      # https://crates.io/docs/trusted-publishing
      - uses: rust-lang/crates-io-auth-action@v1
        id: auth

      - name: Publish
        run: cargo publish
        env:
          CARGO_REGISTRY_TOKEN: ${{ steps.auth.outputs.token }}

  tag-and-make-release:
    name: Tag and create release
    runs-on: ubuntu-latest
    needs:
      - publish
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          persist-credentials: false

      - name: Tag the version
        env:
          GITHUB_TOKEN: ${{ secrets.TAGGER_GITHUB_TOKEN }}
        run: |
          git tag "${{ inputs.publish-tag }}"
          git push origin "${{ inputs.publish-tag }}"

      - uses: taiki-e/create-gh-release-action@v1
        name: Create github release
        with:
          branch: main
          ref: refs/tags/${{ inputs.publish-tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  upload-binary:
    name: Run the build-binaries workflow
    needs:
      - publish
    if: github.ref == 'refs/heads/main'
    uses: ./.github/workflows/build-binaries.yml
    with:
      publish-tag: ${{ inputs.publish-tag }}

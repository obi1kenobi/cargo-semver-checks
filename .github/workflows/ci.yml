name: CI

on:
  pull_request:
  push:
    branches:
      - main
  schedule:
    - cron: '17 7 * * 1-5'  # run once per day Monday-Friday at 7:17am

env:
  RUST_BACKTRACE: 1
  CARGO_TERM_COLOR: always

jobs:
  ci-everything:
    name: All CI stages
    runs-on: ubuntu-latest
    needs:
      - lint
      - rust-tests
      - run-on-rust-libp2p
      - run-on-core-graphics
    steps:
      - run: exit 0

  lint:
    name: Check lint and rustfmt
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt, clippy
          profile: minimal
          override: true

      - uses: Swatinem/rust-cache@v2

      - name: cargo clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --workspace --all-features --all-targets -- -D warnings --allow deprecated

      - name: cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: -- --check

  rust-tests:
    name: Run tests
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      matrix:
        toolchain: ["stable", "beta"]
        experimental: [false]
        include:
          - toolchain: "nightly"
            experimental: true
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          profile: minimal

      - name: Regenerate test data
        run: ./scripts/regenerate_test_rustdocs.sh

      - uses: Swatinem/rust-cache@v2

      - name: compile
        run: cargo test --no-run

      - name: test
        run: cargo test

  run-on-rust-libp2p:
    # Run cargo-semver-checks on a crate with no semver violations,
    # to make sure there are no false-positives.
    #
    # cargo-semver-checks previously reported a false-positive here,
    # since an enum variant in the crate was included by a feature:
    # https://github.com/obi1kenobi/cargo-semver-check/issues/147
    name: Run cargo-semver-checks on rust-libp2p 0.47.0
    runs-on: ubuntu-latest
    steps:
      - name: Checkout cargo-semver-checks
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: Checkout rust-libp2p
        uses: actions/checkout@v3
        with:
          persist-credentials: false
          repository: 'libp2p/rust-libp2p'
          ref: '3371d7ceab242440216ae9ab99829631fa418f3b'
          path: 'crate'

      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      # rust-libp2p requires protobuf-compiler.
      - name: Install protobuf-compiler
        run: sudo apt install protobuf-compiler

      - name: Run semver-checks
        run: cargo run semver-checks check-release --manifest-path="crate/core/Cargo.toml"

      # Test passing package name explicitly.
      # It was previously possible to make the command above work while the one here failed.
      # Reference: https://github.com/obi1kenobi/cargo-semver-checks/issues/174
      - name: Run semver-checks (alternative command)
        run: cargo run semver-checks check-release --manifest-path="crate/core/Cargo.toml" --package="libp2p-core"

  run-on-core-graphics:
    # Run cargo-semver-checks on a crate with no semver violations,
    # to make sure there are no false-positives.
    #
    # cargo-semver-checks previously reported a false-positive here,
    # due to multiple methods by the same name being defined on the same type.
    # https://github.com/obi1kenobi/cargo-semver-checks/issues/193
    name: Run cargo-semver-checks on core-graphics
    runs-on: macos-latest
    steps:
      - name: Checkout cargo-semver-checks
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: Checkout rust-libp2p
        uses: actions/checkout@v3
        with:
          persist-credentials: false
          repository: 'servo/core-foundation-rs'
          ref: '786895643140fa0ee4f913d7b4aeb0c4626b2085'
          path: 'crate'

      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Run semver-checks
        run: cargo run semver-checks check-release --manifest-path="crate/core-graphics/Cargo.toml"

  publish:
    name: Publish to crates.io
    runs-on: ubuntu-latest
    needs:
      - should-publish
      - ci-everything
      - pre-publish-checks
    if: needs.should-publish.outputs.is_new_version == 'yes' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: true

      - name: Tag the version
        run: |
          set -euxo pipefail
          export CURRENT_VERSION="$(./scripts/get_current_version.sh cargo-semver-checks)"
          git tag "v$CURRENT_VERSION"
          git push origin "v$CURRENT_VERSION"

      - name: Publish
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: cargo publish

  should-publish:
    name: Check if version changed
    runs-on: ubuntu-latest
    outputs:
      is_new_version: ${{ steps.check.outputs.is_new_version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      - id: check
        run: |
          set +e
          ./scripts/is_version_already_uploaded.sh cargo-semver-checks
          export EXIT_CODE="$?"
          set -e
          if [[ "$EXIT_CODE" == "7" ]]; then
            echo '::set-output name=is_new_version::no'
          elif [[ "$EXIT_CODE" == "0" ]]; then
            echo '::set-output name=is_new_version::yes'
          else
            # Unexpected outcome, indicates a bug.
            exit "$EXIT_CODE"
          fi

  pre-publish-checks:
    name: Check for semver compliance
    runs-on: ubuntu-latest
    needs:
      - ci-everything
      - should-publish
    if: needs.should-publish.outputs.is_new_version == 'yes'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: Check semver
        uses: obi1kenobi/cargo-semver-checks-action@v1
        with:
          # cargo-semver-checks currently doesn't have a --lib target,
          # so we explicitly ask for the binary target to be checked instead.
          # For library crates, you almost always want the default `--lib` value here.
          crate-target: --bin cargo-semver-checks
